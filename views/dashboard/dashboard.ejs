<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('partials/head') %>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    .chart-container-usuarios,
    .chart-container-asistencias,
    .chart-container-estado {
      height: 700px;
    }
  </style>
</head>

<body>
  <div class="container-scroller">
    <nav class="sidebar sidebar-offcanvas" id="sidebar">
      <%- include('partials/sidebar') %>
    </nav>

    <div class="container-fluid page-body-wrapper">
      <nav class="navbar p-0 fixed-top d-flex flex-row">
        <%- include('partials/topbar') %>
      </nav>

      <div class="main-panel">
        <div class="content-wrapper">
          <div class="row">
            <div class="col-12 grid-margin">
              <div class="card">
                <div class="card-body">
                  <h5>Estudiantes registrados</h5>
                  <div class="chart-container chart-container-usuarios">
                    <canvas id="usuariosChart"></canvas>
                  </div>
                </div>
              </div>
            </div>

            <div class="col-12 grid-margin">
              <div class="card">
                <div class="card-body">
                  <h5>Asistencias de Estudiantes</h5>
                  <div class="chart-container chart-container-asistencias">
                    <canvas id="asistenciasChart"></canvas>
                  </div>
                </div>
              </div>
            </div>

            <div class="col-12 grid-margin">
              <div class="card">
                <div class="card-body">
                  <h5>Estado de Usuarios</h5>
                  <div class="chart-container chart-container-estado">
                    <canvas id="estadoUsuariosChart"></canvas>
                  </div>
                </div>
              </div>
            </div>

            <div class="col-12 grid-margin">
              <div class="card">
                <div class="card-body">
                  <h5>Estudiantes Menores de Edad</h5>
                  <div class="chart-container chart-container-estado">
                    <canvas id="menoresEdadChart"></canvas>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <script>
            const usuariosEndpoint = 'http://localhost:4000/api/traer_usuarios';
            const asistenciasEndpoint = 'http://localhost:4000/api/obtenerAsistencias';

            async function cargarUsuarios() {
              try {
                const response = await fetch(usuariosEndpoint);
                if (!response.ok) {
                  throw new Error('Error en la carga de datos de usuarios');
                }
                const usuarios = await response.json();

                const conteoRoles = {};
                const estadoCount = { habilitado: 0, deshabilitado: 0 };
                let menoresCount = 0;

                const fechaActual = new Date();

                usuarios.forEach(usuario => {
                  const rol = usuario.nombre_clase;
                  conteoRoles[rol] = (conteoRoles[rol] || 0) + 1;

                  // Contar estados
                  if (usuario.estado === "habilitado") {
                    estadoCount.habilitado++;
                  } else {
                    estadoCount.deshabilitado++;
                  }

               
                  const fechaNacimiento = new Date(usuario.fecha_nacimiento);
                  const edad = fechaActual.getFullYear() - fechaNacimiento.getFullYear();
                  const mesDiff = fechaActual.getMonth() - fechaNacimiento.getMonth();

                  if (edad < 18 || (edad === 18 && (mesDiff < 0 || (mesDiff === 0 && fechaActual.getDate() < fechaNacimiento.getDate())))) {
                    menoresCount++;
                  }
                });

                const labels = Object.keys(conteoRoles);
                const values = Object.values(conteoRoles);

                crearGraficoUsuarios(labels, values);
                crearGraficoEstadoUsuarios(estadoCount);
                crearGraficoMenoresEdad(menoresCount, usuarios.length); 
              } catch (error) {
                console.error('Error:', error);
              }
            }

            function crearGraficoUsuarios(labels, values) {
              const ctx = document.getElementById('usuariosChart').getContext('2d');

              const data = {
                labels: labels,
                datasets: [{
                  label: 'Usuarios por Rol',
                  data: values,
                  backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(255, 206, 86, 0.6)',
                    'rgba(75, 192, 192, 0.6)',
                    'rgba(153, 102, 255, 0.6)'
                  ],
                }]
              };

              const config = {
                type: 'doughnut',
                data: data,
                options: {
                  responsive: true,
                  plugins: {
                    legend: {
                      position: 'top',
                    },
                    title: {
                      display: true,
                      text: 'Distribución de Usuarios por Rol'
                    }
                  }
                }
              };

              new Chart(ctx, config);
            }

            async function cargarAsistencias() {
              try {
                const response = await fetch(asistenciasEndpoint);
                if (!response.ok) {
                  throw new Error('Error en la carga de datos de asistencias');
                }
                const asistencias = await response.json();

                const presentes = [];
                const ausentes = [];
                const fechas = [];

                asistencias.forEach(asistencia => {
                  let presenteCount = 0;
                  let ausenteCount = 0;

                  asistencia.estudiantes.forEach(estudiante => {
                    if (estudiante.presente === "sí") {
                      presenteCount++;
                    } else {
                      ausenteCount++;
                    }
                  });

                  presentes.push(presenteCount);
                  ausentes.push(ausenteCount);
                  fechas.push(new Date(asistencia.fecha_asistencia).toLocaleDateString());
                });

                crearGraficoAsistencias(fechas, presentes, ausentes);
              } catch (error) {
                console.error('Error:', error);
              }
            }

            function crearGraficoAsistencias(fechas, presentes, ausentes) {
              const ctx = document.getElementById('asistenciasChart').getContext('2d');

              const data = {
                labels: fechas,
                datasets: [
                  {
                    label: 'Presentes',
                    data: presentes,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                  },
                  {
                    label: 'Ausentes',
                    data: ausentes,
                    borderColor: 'rgba(255, 99, 132, 1)',
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                  }
                ]
              };

              const config = {
                type: 'line',
                data: data,
                options: {
                  responsive: true,
                  plugins: {
                    title: {
                      display: true,
                      text: 'Asistencias de Estudiantes'
                    },
                    legend: {
                      position: 'top',
                    }
                  },
                  scales: {
                    y: {
                      beginAtZero: true
                    }
                  }
                }
              };

              new Chart(ctx, config);
            }

            function crearGraficoEstadoUsuarios(estadoCount) {
              const ctx = document.getElementById('estadoUsuariosChart').getContext('2d');

              const data = {
                labels: ['Habilitados', 'Deshabilitados'],
                datasets: [{
                  label: 'Estado de Usuarios',
                  data: [estadoCount.habilitado, estadoCount.deshabilitado],
                  backgroundColor: [
                    'rgba(75, 192, 192, 0.6)',
                    'rgba(255, 99, 132, 0.6)'
                  ],
                }]
              };

              const config = {
                type: 'bar',
                data: data,
                options: {
                  responsive: true,
                  plugins: {
                    legend: {
                      position: 'top',
                    },
                    title: {
                      display: true,
                      text: 'Estado de Usuarios'
                    }
                  },
                  scales: {
                    y: {
                      beginAtZero: true
                    }
                  }
                }
              };

              new Chart(ctx, config);
            }

            function crearGraficoMenoresEdad(menoresCount, totalCount) {
              const ctx = document.getElementById('menoresEdadChart').getContext('2d');

              const data = {
                labels: ['Menores de Edad', 'Mayores de Edad'],
                datasets: [{
                  label: 'Distribución de Usuarios por Edad',
                  data: [menoresCount, totalCount - menoresCount],
                  backgroundColor: [
                    'rgba(255, 206, 86, 0.6)',
                    'rgba(54, 162, 235, 0.6)'
                  ],
                }]
              };

              const config = {
                type: 'doughnut',
                data: data,
                options: {
                  responsive: true,
                  plugins: {
                    legend: {
                      position: 'top',
                    },
                    title: {
                      display: true,
                      text: 'Distribución de Usuarios Menores y Mayores de Edad'
                    }
                  }
                }
              };

              new Chart(ctx, config);
            }

            window.onload = async function() {
              await cargarUsuarios();
              await cargarAsistencias();
            };
          </script>

          <%- include('partials/footer') %>
        </div>
      </div>
    </div>
  </div>

  <%- include('partials/script') %>
</body>

</html>